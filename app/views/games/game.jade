extends ../layouts/layout

block content
  .row.mb20
    .col-4(data-bind="if: player1")
      .well.player(data-bind="template: {name: 'playerTemplate', data: player1}, css: {turn: player1().turn}")
    .col-4.game
      .tictactoecubed(data-bind='with: tictactoecubed')
        .tictactoes(data-bind='foreach: tictactoes, css: {solved: isSolved}')
          .tictacrow(data-bind='foreach: $data')
            .highlight(data-bind='visible: highlight')
            .wonbox(data-bind='visible: won, css: {won_x: won_x, won_y: won_y}')
            .tictoes(data-bind='foreach: tictoes, css: {won_x: won_x, won_y: won_y}')
              .ticrow(data-bind='foreach: $data')
                input(class='tictoe', data-bind="enable: isActive, event: {keypress: keypressed}, css: {won: won}, value: value")
          .clearfix
        .clearfix
      div.share-game.text-center
        span.lbl Share Via 
        a.facebook
          span.icon-stack
            i.icon-sign-blank.icon-stack-base
            i.icon-facebook.icon-light(data-share-via='facebook', data-bind='click: shareClick')
        a.twitter
          span.icon-stack
            i.icon-sign-blank.icon-stack-base
            i.icon-twitter.icon-light(data-share-via='twitter', data-bind='click: shareClick')
        a.google
          span.icon-stack
            i.icon-sign-blank.icon-stack-base
            i.icon-google-plus.icon-light(data-share-via='google', data-bind='click: shareClick')
    .col-4(data-bind="if: player2, visible: player2")
      .well.player(data-bind="template: {name: 'playerTemplate', data: player2}, css: {turn: player2().turn}")
    .col-4(data-bind="ifnot: player2, visible: !player2()")
      .well.player(data-bind="template: {name: 'playerBlankTemplate'}")
  .row
    #chatBox.well
      legend
        span Chat
        span#connected(title='Connecting...')
          span.icon-stack
            i.icon-circle.icon-stack-base
            i.icon.icon-remove
      .chats(data-bind='foreach: messages')
        .chat(data-bind="template: {name: 'messageTemplate', data: $data, afterRender: $root.scrollChat}")
      input.form-control#chatMessage.input-block-level(type='text', name='chatMessage', disabled, data-bind='event: {keypress: sendMessage}', placeholder='Enter message')

block scripts
  script(type="text/html", id="playerTemplate")
    .pull-left
      img.avatar(data-bind='attr: {src: avatar}')
    h3(data-bind='text: name')
    .info
      span Tic: 
      span(data-bind='text: tic')
  script(type="text/html", id="playerBlankTemplate")
    legend Player 2
    a.btn.btn-primary.join(href='#', data-bind='click: $root.joinGame, css: {disabled: !$root.canJoin()}') Join
  script(type="text/html", id="messageTemplate")
    .pull-left
      img.avatar(data-bind='attr: {src: avatar}')
    .message.pull-left
      .username(data-bind='text: username')
      .message-text(data-bind='text: message')
    .clear
  != js('models/player')
  != js('models/tictoe')
  != js('models/tictactoe')
  != js('models/tictactoecubed')
  != js('models/game')
  script(type="text/javascript")
    var socket = io.connect(location.host);
    var user = !{JSON.stringify(currentUser)};
    var game = new Game(!{JSON.stringify(game)}, socket);
    ko.applyBindings(game);
